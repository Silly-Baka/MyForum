<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MyForum.mapper.PostMapper">
    <sql id="allColumn">
        id,user_id,title,content,type,status,create_time,comment_count,score
    </sql>
    <resultMap id="PostMap" type="MyForum.pojo.Post">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="score" column="score"/>
        <result property="commentCount" column="comment_count"/>
    </resultMap>
    <select id="getPostList" resultMap="PostMap">
        select <include refid="allColumn"/>
        from post_detail
        where status = 0 or status = 1
        order by type and create_time desc
        limit #{offset},#{pageSize}
    </select>
    <select id="getCount" resultType="integer">
        select count(*)
        from post_detail
        <where>
            <trim suffixOverrides="and">
                <if test="userId != null">
                    user_id = #{userId} and
                </if>
                <if test="status == null">
                    status = 0 or status = 1 and
                </if>
            </trim>
        </where>
    </select>

    <select id="getHotPosts" resultMap="PostMap">
        select <include refid="allColumn"/>
        from post_detail
        order by score desc
        limit 100;
    </select>

    <select id="getPostById" resultMap="PostMap">
        select <include refid="allColumn"/>
        from post_detail
        where id = #{id}
    </select>

    <select id="getPostListByUserId" resultMap="PostMap">
        select <include refid="allColumn"/>
        from post_detail
        where user_id = #{userId}
        limit #{offset},#{pageSize}
    </select>

    <select id="getScoreByPostId" resultType="int">
        select score
        from post_detail
        where id = #{postId}
    </select>
    
    <select id="getAllPostId" resultType="long">
        select distinct id
        from post_detail
    </select>

    <select id="getAllPost" resultMap="PostMap">
        select <include refid="allColumn"/>
        from post_detail
    </select>

    <update id="updatePostDynamic">
        update post_detail
        <trim prefix="set" suffixOverrides=",">
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="commentCount != null">
                comment_count = #{commentCount},
            </if>
            <if test="score != null">
                score = #{score}
            </if>
        </trim>
        where id = #{id}
    </update>

    <update id="incrScoreByPostId">
        update post_detail
        set score =
        <if test="incr == true">
            score+1
        </if>
        <if test="incr != true">
            score-1
        </if>
        where id = #{postId}
    </update>

    <insert id="addPost" useGeneratedKeys="true" keyProperty="id">
        insert into post_detail(<include refid="allColumn"/>)
        values(null,#{userId},#{title},#{content},#{type},#{status},#{createTime},#{commentCount},#{score})
    </insert>

    <delete id="deletePost">
        delete from post_detail
        where id = #{postId}
    </delete>

</mapper>